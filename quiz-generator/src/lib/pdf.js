// filepath: src/lib/pdf.js
'use client';
import jsPDF from 'jspdf';

// Check if user has PDF export permissions
function checkPDFPermission() {
  // This will be injected by components that have access to subscription context
  if (window._subscriptionStatus && typeof window._subscriptionStatus.canExportPDF === 'function') {
    return window._subscriptionStatus.canExportPDF();
  }
  
  // Default to false if subscription status is not available
  return false;
}

function showUpgradeModal() {
  // Trigger subscription modal
  window.dispatchEvent(new CustomEvent('showSubscriptionModal'));
}

export async function generateReportPDF(quiz, selectedAnswers) {
  // Check subscription permission
  if (!checkPDFPermission()) {
    showUpgradeModal();
    throw new Error('PDF export requires Premium subscription. Please upgrade to access this feature.');
  }
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.width;
  const pageHeight = pdf.internal.pageSize.height;
  const margin = 20;
  const lineHeight = 8;
  let yPosition = 30;

  pdf.setFontSize(24);
  pdf.setFont('helvetica', 'bold');
  pdf.text(quiz.title, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 15;
  pdf.setFontSize(12);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Quiz Report Generated on ${new Date().toLocaleDateString()}`, pageWidth / 2, yPosition, { align: 'center' });

  const score = (selectedAnswers) => {
    let s = 0;
    quiz.questions.forEach((q, i) => { if (selectedAnswers?.[i] === q.answer) s++; });
    return s;
  };
  const pct = Math.round((score(selectedAnswers) / quiz.questions.length) * 100) || 0;

  yPosition += 20;
  pdf.setFontSize(36);
  pdf.setFont('helvetica', 'bold');
  pdf.text(`${pct}%`, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 15;
  pdf.setFontSize(16);
  pdf.text(`Score: ${score(selectedAnswers)}/${quiz.questions.length}`, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 20;
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Performance Summary', margin, yPosition);

  yPosition += 10;
  pdf.setFontSize(10);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Language: ${quiz.language}`, margin, yPosition);
  yPosition += lineHeight;
  pdf.text(`Difficulty: ${quiz.difficulty?.charAt(0).toUpperCase() + quiz.difficulty?.slice(1)}`, margin, yPosition);
  yPosition += lineHeight;
  pdf.text(`Total Questions: ${quiz.questions.length}`, margin, yPosition);
  yPosition += lineHeight;
  pdf.text(`Correct Answers: ${score(selectedAnswers)}`, margin, yPosition);
  yPosition += lineHeight;
  pdf.text(`Accuracy: ${pct}%`, margin, yPosition);

  yPosition += 20;
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Question Review', margin, yPosition);

  quiz.questions.forEach((question, index) => {
    const isCorrect = selectedAnswers?.[index] === question.answer;
    if (yPosition > pageHeight - 60) { pdf.addPage(); yPosition = 30; }
    yPosition += 15;

    pdf.setFontSize(12);
    pdf.setFont('helvetica', 'bold');
    pdf.text(`Question ${index + 1}: ${isCorrect ? '✓' : '✗'}`, margin, yPosition);

    yPosition += 8;
    pdf.setFontSize(10);
    pdf.setFont('helvetica', 'normal');

    const questionLines = pdf.splitTextToSize(question.question, pageWidth - 2 * margin);
    pdf.text(questionLines, margin, yPosition);
    yPosition += questionLines.length * lineHeight;

    yPosition += 5;
    pdf.setTextColor(isCorrect ? 0 : 220, isCorrect ? 150 : 0, isCorrect ? 0 : 0);
    pdf.text(`Your answer: ${selectedAnswers?.[index] || 'No answer'}`, margin + 10, yPosition);

    yPosition += lineHeight;
    pdf.setTextColor(0, 150, 0);
    pdf.text(`Correct answer: ${question.answer}`, margin + 10, yPosition);

    yPosition += lineHeight;
    pdf.setTextColor(0, 0, 0);

    yPosition += 5;
    pdf.setFontSize(9);
    const optionsText = `Options: ${question.options.join(', ')}`;
    const optionLines = pdf.splitTextToSize(optionsText, pageWidth - 2 * margin - 10);
    pdf.text(optionLines, margin + 10, yPosition);
    yPosition += optionLines.length * 6;
  });

  yPosition = pageHeight - 30;
  pdf.setFontSize(8);
  pdf.setTextColor(100, 100, 100);
  pdf.text('Generated by Quiz Generator - AI-Powered Learning Platform', pageWidth / 2, yPosition, { align: 'center' });
  pdf.text('Keep practicing to improve your knowledge!', pageWidth / 2, yPosition + 8, { align: 'center' });

  pdf.save(`${quiz.title.replace(/[^a-z0-9]/gi, '_')}_report.pdf`);
}

export async function generateWorksheetPDF(quiz) {
  // Check subscription permission
  if (!checkPDFPermission()) {
    showUpgradeModal();
    throw new Error('PDF export requires Premium subscription. Please upgrade to access this feature.');
  }
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.width;
  const pageHeight = pdf.internal.pageSize.height;
  const margin = 20;
  const lineHeight = 7;
  let yPosition = 30;

  pdf.setFontSize(20);
  pdf.setFont('helvetica', 'bold');
  pdf.text(quiz.title, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 10;
  pdf.setFontSize(12);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Difficulty: ${quiz.difficulty?.charAt(0).toUpperCase() + quiz.difficulty?.slice(1)} | Language: ${quiz.language}`, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 8;
  pdf.text(`Total Questions: ${quiz.questions.length}`, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 20;
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Instructions:', margin, yPosition);

  yPosition += 10;
  pdf.setFontSize(10);
  pdf.setFont('helvetica', 'normal');
  const instructions = [
    '• Answer all questions by selecting the best option',
    '• Fill in the circle next to your chosen answer',
    '• Use pencil so you can erase and correct mistakes',
    '• Check your answers on the last page when complete'
  ];
  instructions.forEach(instruction => { pdf.text(instruction, margin, yPosition); yPosition += lineHeight; });

  yPosition += 10;
  pdf.text('Name: ________________________________   Date: ______________', margin, yPosition);
  yPosition += 20;

  quiz.questions.forEach((question, index) => {
    if (yPosition > pageHeight - 80) { pdf.addPage(); yPosition = 30; }
    pdf.setFontSize(11);
    pdf.setFont('helvetica', 'bold');
    pdf.text(`Question ${index + 1}:`, margin, yPosition);

    yPosition += 8;
    pdf.setFont('helvetica', 'normal');
    const questionLines = pdf.splitTextToSize(question.question, pageWidth - 2 * margin);
    pdf.text(questionLines, margin, yPosition);
    yPosition += questionLines.length * lineHeight + 5;

    question.options.forEach((option, optIndex) => {
      pdf.circle(margin + 5, yPosition - 2, 2, 'D');
      pdf.text(`${String.fromCharCode(65 + optIndex)}. ${option}`, margin + 12, yPosition);
      yPosition += lineHeight + 2;
    });
    yPosition += 8;
  });

  pdf.addPage();
  yPosition = 30;

  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Answer Key', pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 10;
  pdf.setFontSize(10);
  pdf.setFont('helvetica', 'italic');
  pdf.text('For Teacher/Self-Check Use Only', pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 20;
  pdf.setFont('helvetica', 'normal');

  const answersPerRow = 3;
  let currentCol = 0;

  quiz.questions.forEach((question, index) => {
    const correctIndex = question.options.indexOf(question.answer);
    const answerText = `Q${index + 1}: ${String.fromCharCode(65 + correctIndex)} - ${question.answer}`;
    const xPos = margin + (currentCol * (pageWidth - 2 * margin) / answersPerRow);

    pdf.rect(xPos, yPosition - 8, (pageWidth - 2 * margin) / answersPerRow - 5, 12, 'D');
    pdf.setFontSize(8);
    const textLines = pdf.splitTextToSize(answerText, (pageWidth - 2 * margin) / answersPerRow - 10);
    pdf.text(textLines, xPos + 2, yPosition - 4);

    currentCol++;
    if (currentCol >= answersPerRow) { currentCol = 0; yPosition += 20; }
  });

  yPosition += 30;
  pdf.setFontSize(12);
  pdf.setFont('helvetica', 'bold');
  pdf.text('Scoring Guide:', margin, yPosition);

  yPosition += 10;
  pdf.setFontSize(10);
  pdf.setFont('helvetica', 'normal');
  const scoringGuide = [
    '• 90-100%: Excellent (A)',
    '• 80-89%: Good (B)',
    '• 70-79%: Satisfactory (C)',
    '• 60-69%: Needs Improvement (D)',
    '• Below 60%: Additional Study Required (F)'
  ];
  scoringGuide.forEach(guide => { pdf.text(guide, margin, yPosition); yPosition += 7; });

  yPosition = pageHeight - 15;
  pdf.setFontSize(8);
  pdf.setTextColor(100, 100, 100);
  pdf.text('Generated by Quiz Generator - Educational Tools Platform', pageWidth / 2, yPosition, { align: 'center' });

  pdf.save(`${quiz.title.replace(/[^a-z0-9]/gi, '_')}_worksheet.pdf`);
}
